{% extends "contentj.jinja2" %}
<title>Export</title>

{% block headbody %}

    <link rel="stylesheet" href="https://openlayers.org/en/v5.2.0/css/ol.css" type="text/css">
    <!--导入最新版本ol的js文件。-->
    <script src="https://openlayers.org/en/v5.2.0/build/ol.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/FileSaver.js/1.3.3/FileSaver.min.js"></script>
    <style>
        #olmap {
            border: 1px solid #ddd;
            width: 99%;
            height: 400px;
        }
    </style>

{% endblock %}

{% block cntbody %}

        <div id="olmap" class="olmap"></div>
    <br>
    <a id="export-png" class="btn btn-primary">Download PNG</a>


     <br>
    <p>Export a map as an example of a PNG image. This example requires a browser that supports canvas.toBlob().</p>
    <script>
      // 此示例使用FileSaver.js，我们没有externs文件。
      var olmap = new ol.Map({
        layers: [
          new ol.layer.Tile({  // 加载瓦片图层数据
            source: new ol.source.OSM()  // 图层对应的数据源，此处加载OpenStreetMap在线瓦片服务数据
          }),
          new ol.layer.Vector({     //向量呈现客户端的数据。 请注意，选项中设置的任何属性都设置为图层对象上的ol.Object属性; 例如，设置标题：选项中的“我的标题”表示标题是可观察的，并且具有获取/设置访问者。
            source: new ol.source.Vector({      //提供矢量图层的要素源。 此源提供的矢量要素适合编辑。 有关针对渲染进行了优化的矢量数据
              url: 'https://openlayers.org/en/v4.6.5/examples/data/geojson/countries.geojson',  //加载程序的URL
              format: new ol.format.GeoJSON()   //设置url时XHR功能加载程序使用的功能格式。 如果设置了url则必需，否则将被忽略。用于以GeoJSON格式读取和写入数据的特征格式。
            })
          })
        ],
        target: 'olmap',  // 地图容器div层的id值
        controls: ol.control.defaults({  //默认情况下包含在地图中的控件集。
          attributionOptions: {     //属性选项。
            collapsible: false
          }
        }),
          //表示显示简单的2D视图地图。
        view: new ol.View({
          center: [0, 0],//地图初始中心点
          zoom: 2  //地图初始显示级别为2
        })
      });
        //按钮控件事件
      document.getElementById('export-png').addEventListener('click', function() {
        olmap.once('postcompose', function(event) {
          var canvas = event.context.canvas;
          if (navigator.msSaveBlob) {
            navigator.msSaveBlob(canvas.msToBlob(), 'olmap.png');
          } else {
            canvas.toBlob(function(blob) {
              saveAs(blob, 'olmap.png');
            });
          }
        });
        olmap.renderSync();
      });
    </script>

{% endblock %}


