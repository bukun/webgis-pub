{% extends "contentj.jinja2" %}
  <title>Cartodb Map</title>

    {% block headbody %}
    <link rel="stylesheet" href="/f2elib/ol-6.14.1/ol.css" type="text/css">

    <!--导入最新版本ol的js文件。-->
	<script src="/f2elib/ol-6.14.1/ol.js"></script>
  <style>
        #olmap {
            border: 1px solid #ddd;
            width: 99%;
            height: 400px;
        }
    </style>

    {% endblock %}

{%  block cntbody %}


   <div class="row-fluid">
      <div class="span12">
        <div id="olmap" class="olmap"></div>
        <div>
        <form class="form-horizontal">
            <div class="col-sm-12">
          <label class="col-sm-2">
            Show countries larger than
               </label>
            <div class="col-sm-10">
            <select id="country-area" class="form-control">
              <option value="0" selected>0 ㎢</option>
              <option value="5000">5000 ㎢</option>
              <option value="10000">10000 ㎢</option>
              <option value="50000">50000 ㎢</option>
              <option value="100000">100000 ㎢</option>
            </select>
         </div>
                </div>
        </form>
      </div>
    </div>
   </div>
    <br>
    <div>A simple case of Cartodb map.</div>
    <script>
	//定义mapConfig对象
      var mapConfig = {
        'layers': [{
          'type': 'cartodb',
          'options': {
            'cartocss_version': '2.1.1',
            'cartocss': '#layer { polygon-fill: #F00; }',
            'sql': 'select * from european_countries_e where area > 0'
          }
        }]
      };
	// 定义对象cartoDBsource的数据源
      var cartoDBSource = new ol.source.CartoDB({
        account: 'documentation',		//CartoDB账户名称必须项	
        config: mapConfig
      });
		//初始换Map对象，显示地图。
      var olmap = new ol.Map({
	   //在地图容器中加载地图
        layers: [
          new ol.layer.Tile({	// 加载瓦片图层数据
            source: new ol.source.OSM()	// 图层对应的数据源，此处加载OpenStreetMap在线瓦片服务数据
          }),
          new ol.layer.Tile({		// 加载瓦片图层数据
            source: cartoDBSource	// 图层对应的数据源，此处加载cartoDBSource服务数据
          })
        ],
        target: 'olmap',		// 地图容器div层的id
        view: new ol.View({
          center: [38, 116],		//地图初始中心点
          zoom: 2				//地图初始显示级别为2
        })
      });

      function setArea(n) {
        mapConfig.layers[0].options.sql =
            'select * from european_countries_e where area > ' + n;
        cartoDBSource.setConfig(mapConfig);
      }


      document.getElementById('country-area').addEventListener('change', function() {
        setArea(this.value);
      });
    </script>

{% endblock %}
<!--一个简单的Cartodb map示例-->