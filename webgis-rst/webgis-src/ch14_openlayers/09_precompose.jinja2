{% extends "contentj.jinja2" %}
  <title>Layer clipping</title>

    {% block headbody %}

    <link rel="stylesheet" href="/f2elib/ol-6.14.1/ol.css" type="text/css">

    <!--导入最新版本ol的js文件。-->
	<script src="/f2elib/ol-6.14.1/ol.js"></script>
  <style>
        #olmap {
            border: 1px solid #ddd;
            width: 99%;
            height: 400px;
        }
    </style>

    {% endblock %}

{%  block cntbody %}


    <div id="olmap" class="olmap"></div>
    <br>
    <div>Layer clip example. Display the map directly as a cut shape.</div>
    <script>
	//定义osm加载图层源
      var osm = new ol.layer.Tile({  //加载瓦片图层
        source: new ol.source.OSM()	//加载地图OpenStreetMap层源
      });
	//加载地图
      var olmap = new ol.Map({
        layers: [osm],	//加载图层为osm对象
        target: 'olmap',	//地图容器div的id
	//控件最初添加到map中。
        controls: ol.control.defaults({		//设置控件中的控件集。	
          attributionOptions: {			//属性选项
            collapsible: false			//折叠属性。
          }
        }),
        view: new ol.View({		//地图为2D视图
          center: [0, 0],		//地图初始中心点
          zoom: 2			//地图初始级别。
        })
      });
	//图层剪裁
      osm.on('precompose', function(event) {
        var ctx = event.context;
        ctx.save();
        var pixelRatio = event.frameState.pixelRatio;
        var size = olmap.getSize();
        ctx.translate(size[0] / 2 * pixelRatio, size[1] / 2 * pixelRatio);
        ctx.scale(3 * pixelRatio, 3 * pixelRatio);
        ctx.translate(-75, -80);
        ctx.beginPath();
        ctx.moveTo(75, 40);
        ctx.bezierCurveTo(75, 37, 70, 25, 50, 25);
        ctx.bezierCurveTo(20, 25, 20, 62.5, 20, 62.5);
        ctx.bezierCurveTo(20, 80, 40, 102, 75, 120);
        ctx.bezierCurveTo(110, 102, 130, 80, 130, 62.5);
        ctx.bezierCurveTo(130, 62.5, 130, 25, 100, 25);
        ctx.bezierCurveTo(85, 25, 75, 37, 75, 40);
        ctx.clip();
        ctx.translate(75, 80);
        ctx.scale(1 / 3 / pixelRatio, 1 / 3 / pixelRatio);
        ctx.translate(-size[0] / 2 * pixelRatio, -size[1] / 2 * pixelRatio);
      });

      osm.on('postcompose', function(event) {
        var ctx = event.context;
        ctx.restore();
      });
    </script>

{% endblock %}
<!--层裁剪示例-->