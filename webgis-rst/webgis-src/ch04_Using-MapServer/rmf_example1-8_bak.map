# 由 Pericles S. Nacionales 为MapServer的教程创建带注释的地图文件。
# 20050408

MAP
    NAME EX1.8_
    EXTENT 201621.496941 -294488.285333 1425518.020722 498254.511514 # LAEA

    SIZE 400 300
    IMAGECOLOR 255 255 255
    SHAPEPATH "/gdata/data"
    SYMBOLSET "../symbols/symbols35.sym"
    FONTSET "../fonts/fonts.list"
    IMAGETYPE PNG24

    OUTPUTFORMAT
        NAME png
        DRIVER "GD/PNG"
        MIMETYPE "image/png"
        IMAGEMODE PC256
        EXTENSION "png"
    END
    OUTPUTFORMAT
        NAME png24
        DRIVER "GD/PNG"
        MIMETYPE "image/png"
        IMAGEMODE RGBA
        EXTENSION "png"
    END
    # OUTPUTFORMAT
    # NAME jpeg
    # DRIVER "GD/JPEG"
    # FORMATOPTION "QUALITY=75"
    # MIMETYPE "image/jpeg"
    # IMAGEMODE RGB
    # EXTENSION "jpg"
    # END
    OUTPUTFORMAT
        NAME GTiff
        DRIVER "GDAL/GTiff"
        MIMETYPE "image/tiff"
        IMAGEMODE RGB
        EXTENSION "tif"
    END
    #OUTPUTFORMAT
    # NAME pdf
    # MIMETYPE "application/x-pdf"
    # DRIVER pdf
    # #FORMATOPTION "OUTPUT_TYPE=RASTER" # not mandatory but needed for WMS layer
    #END
    OUTPUTFORMAT
        NAME AGG
        DRIVER "AGG/PNG"
        IMAGEMODE RGB
    END
    OUTPUTFORMAT
        NAME AGGA
        DRIVER "AGG/PNG"
        IMAGEMODE RGBA
    END
    OUTPUTFORMAT
        NAME AGGJ
        DRIVER "AGG/JPEG"
        IMAGEMODE RGB
    END
    # The web object is defined at the level below the map object. All
    # web-related parameters (I interchange "parameters" and "keyword/value
    # pairs" quite frequently, sorry about that) are defined in this object.Web对象的定义在地图下方的对象。这个对象中定义的所有网络相关的参数（我交换“参数”和“关键字/值对”相当频繁，我们对此深感抱歉）。
    WEB
        IMAGEPATH '/ms4w/tmp/ms_tmp/'
        IMAGEURL '/ms_tmp/'
    END
    # The projection object is typically used within the map and the layer
    # objects. You only define it once within the map object and this definition
    # becomes your output projection--MapServer will render your maps in this
    # projection. You also use the projection object within the layer object to
    # define your input projection. Your layers can be in different
    # projections--MapServer will reproject them into your output projection.
    # If no projection is defined within the layer object, MapServer assumes
    # your input projection is the same as your output projection. This is not
    # a required object unless you're creating a map file that supports one of
    # the OGC interoperability web services specifications (WMS/WFS/WCS).通常使用的投影对象内的地图和层对象。你只定义一次在地图对象，这个定义成为你的输出投影 - 这一预测的MapServer将呈现您的地图。您也可以使用投影对象层内的对象来定义你的输入投影。你的层可以在不同的预测 - ，MapServer的将它们重新投影到输出投影。层内的对象，如果没有定义投影的MapServer假设您的输入投影输出投影一样。这是不是一个必需的对象，除非你创建一个 MapFile ，支持OGC互操作的Web服务规范（WMS/ WFS/ WCS）。
    #
    # This is the output PROJECTION definition 这是输出投影定义------
    PROJECTION
        # U.S.投影参数可以定义在两个方面，这是传统的PROJ.4定义兰勃特方位等面积投影，美国大陆。
        # "proj=laea"
        # "ellps=clrk66"
        # "lat_0=45"
        # "lon_0=-100"
        #
        # 或者，您可以指定一个EPSG代码。EPSG代码兰勃特方位等面积投影的美国。
        "init=epsg:2163"
    END
    # Layer objects are defined beneath the map object. You need at least one
    # layer defined in your map file before you can display a map... You can
    # define as many layers as you'd like although a limit is typically hard-coded
    # in map.h in the MapServer source. The default limit is set at 100. You'd
    # have to have a very specialized application to need more than 100 layers in
    # your application.层对象定义地图下方的对象。您可以在地图文件定义需要至少一层，然后才可以显示在地图...您可以定义为多层次，只要你愿意，虽然限制通常是硬编码在map.h MapServer的源。默认的限额设定为100。你得有一个非常特殊的应用程序需要在你的应用程序超过100层。
    #
    # Start of LAYER DEFINITIONS 层定义开始---------------------------------------------
    LAYER # States polygon layer begins here
    NAME states
    DATA states_ugl
    STATUS OFF
    TYPE POLYGON
    # Here's an example of the input projection definition.
    # EPSG:4326 is code for geographic (latlong) projection
    # using the WGS84 datum.下面是一个例子输入投影定义。EPSG：4326是地理位置（经纬度）投影用WGS84数据的代码。
    #
    # PROJECTION objects within the LAYER object define the input
    # projection--this is the native projection of your data.投影对象层对象定义输入投影 - 这是您的数据的本地投影。
    PROJECTION
    "init=epsg:4326"
    END
    # CLASSITEM defines the non-spatial attribute that you will be using to
    # separate a layer into classes. This attribute will be in the DBF file
    # of your shapefile (it will be different for each data format). In this
    # example the shapefile states_ugl has an associated database
    # (states_ugl.dbf) that contains an attribute called "CLASS". You will be
    # using two values in the CLASS attribute to separate the classes (also
    # called themes) used in this layer--land and water. CLASSITEM is used in
    # association with the EXPRESSION parameter in the CLASS object. See below.
    # CLASSITEM非空间属性，你将使用分离层类定义。此属性将是你的shape文件中的DBF文件（每种数据格式会有所不同）。在这个例子中的shapefile states_ugl都有一个关联的的数据库（states_ugl.dbf），它包含一个被称为“类”的属性。您将使用两个值中的CLASS属性，在这一层的类（也称为主题） - 土地和水分开。CLASSITEM与类对象中的表达参数。见下文。
    CLASSITEM "CLASS"
    # The class object is defined within the layer object. You can define as
    # many classes as you need but it is good cartographic practice to limit
    # classes to 8 to 10 per layer. (There are also limits as with layers and
    # it's senseless to define more than ten on a "normal" layer. There are
    # situations, however, where you might have to do it.)类对象的定义层内的对象。你可以定义你需要的尽可能多的参加，但它是良好的制图的做法，以限制类8层至10％。（层也有限制，这是毫无意义的定义十余层“正常”。有一些情况，但是，你可能不得不这样做。）
    CLASS
    EXPRESSION 'land'
    STYLE
    SYMBOL 0
    COLOR 232 232 232
    END
    END
    END # States polygon layer ends here
    # In addition to vector data (shapefiles are vector data), MapServer supports
    # a host of raster formats. In GIS world, one of the most common raster
    # formats is GeoTIFF, a TIFF image with geospatial headers. MapServer also
    # supports JPEG, PNG, GIF, and other common formats. Other raster formats
    # supported by MapServer include ESRI Arc/Info grid, HDF and HDF-EOS, NetCDF,
    # Generic raster binaries, OGC Web Map Service (WMS) layers, etc. Pretty much
    # any raster format you can think of is probably supported, thanks to the
    # impressive Geospatial Data Abstraction Library (GDAL, pronounced "GOODALL"
    # or GOODLE?). More information on GDAL is available at http://www.gdal.org.除了矢量数据（shapefile是矢量数据），地图服务器支持的栅格格式的主机。在GIS中的世界，一个最常见的栅格格式为GeoTIFF，TIFF影像与地理头。地图服务器还支持JPEG，PNG，GIF等常见格式。其他栅格格式MapServer的支持，包括ESRI ARC / INFO电网，HDF和HDF-EOS，NetCDF文件，通用栅格二进制，OGC Web地图服务（WMS）层等栅格格式几乎任何你能想到的可能是支持，感谢令人印象深刻的地理空间数据抽象库（GDAL，发音为“大家好好”或Goodle的？）。的更多信息GDAL在http://www.gdal.org
    #
    # MapServer 4.x can read and display bitmapped (like GIFs), RGB/A (true
    # color), and multispectral (images with more than 3 bands, like raw LandSat
    # images) rasters.MapServer的4.x版可以读取并显示位图（如GIF格式），RGB/ A（真彩色），和多光谱栅格（超过3个波段的图像，喜欢生吃的LandSat图像）。
    LAYER # MODIS raster layer begins here
    NAME modis
    DATA "raster/mod09a12003161_ugl_ll_8bit.tif"
    STATUS OFF
    TYPE RASTER
    PROCESSING "BANDS=1,2,3"
    OFFSITE 71 74 65
    PROJECTION
    "init=epsg:4326"
    END
    END # MODIS raster layer ends here
    LAYER # MODIS WMS map from JPL
    NAME modis_jpl
    TYPE RASTER
    OFFSITE 0 0 0
    STATUS OFF
    CONNECTIONTYPE WMS
    CONNECTION "http://wms.jpl.nasa.gov/wms.cgi?"
    METADATA
    "wms_srs" "EPSG:4326"
    "wms_name" "modis"
    "wms_server_version" "1.1.1"
    "wms_format" "image/jpeg"
    END
    PROJECTION
    "init=epsg:4326"
    END
    END # Modis WMS image ends here
    LAYER # States line layer begins here
    NAME states
    DATA states_ugl
    STATUS OFF
    TYPE LINE
    PROJECTION
    "init=epsg:4326"
    END
    CLASSITEM "CLASS"
    CLASS
    EXPRESSION 'land'
    STYLE
    #SYMBOL 'line1'
    COLOR 32 32 32
    #SIZE 1
    END
    END
    END # States line layer ends here
    LAYER # States label layer begins here
    NAME states
    DATA states_ugl
    STATUS OFF
    TYPE polygon
    PROJECTION
    "init=epsg:4326"
    END
    CLASSITEM "CLASS"
    LABELITEM "STATE"
    CLASS
    EXPRESSION 'land'
    STYLE
    COLOR -1 -1 -1
    END
    LABEL
    COLOR 255 255 255
    TYPE TRUETYPE
    FONT arial-bold
    SIZE 12
    ANTIALIAS TRUE
    POSITION CL
    PARTIALS FALSE
    MINDISTANCE 300
    BUFFER 4
    END # end of label
    END # end of class
    END # States label layer ends here
    # End of LAYER DEFINITIONS -------------------------------
END # end of map file